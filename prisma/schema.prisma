// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Produto {
  id          Int     @id @default(autoincrement())
  nome       String
  marca      String
  preco      Float
  categoria  String?
  cor        String?
  estoque    Int?
  imagemUrl   String?
  descricao  String?
  

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Personagem {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  age         Int
  power       Boolean
  anime       String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("personagens")
}

model Collection {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  releaseYear Int

  // Segundo: marcação da lista de dados da tabela dependente
  cards Card[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("collections")
}

model Card {
  id            Int     @id @default(autoincrement())
  name          String  @unique
  rarity        String
  attackPoints  Int
  defensePoints Int
  imageUrl      String?

  // Primeiro: configuração da tabela dependente
  collectionId Int
  collection   Collection @relation(fields: [collectionId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("cards")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}
